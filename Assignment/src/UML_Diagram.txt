TRANSPORTATION FLEET MANAGEMENT SYSTEM - CLASS DIAGRAM
================================================================

┌─────────────────────────────────────────────────────────────────┐
│                        EXCEPTIONS                               │
├─────────────────────────────────────────────────────────────────┤
│ InvalidOperationException                                       │
│ OverloadException                                               │
│ InsufficientFuelException                                       │
└─────────────────────────────────────────────────────────────────┘

┌─────────────────────────────────────────────────────────────────┐
│                        VEHICLE (Abstract)                       │
├─────────────────────────────────────────────────────────────────┤
│ - String id                                                     │
│ - String model                                                  │
│ - double maxSpeed                                               │
│ - double currentMileage                                         │
├─────────────────────────────────────────────────────────────────┤
│ + Vehicle(id, model, maxSpeed)                                  │
│ + getId() : String                                              │
│ + getModel() : String                                           │
│ + getMaxSpeed() : double                                        │
│ + getCurrentMileage() : double                                  │
│ + updateMileage(distance) : void                               │
│ + setCurrentMileage(mileage) : void                            │
│ + move(distance) : void [ABSTRACT]                             │
│ + calculateFuelEfficiency() : double [ABSTRACT]                │
│ + estimateJourneyTime(distance) : double [ABSTRACT]            │
│ + displayInfo() : void                                          │
│ + compareTo(other) : int                                        │
│ + toString() : String                                           │
│ + toCSV() : String                                              │
└─────────────────────────────────────────────────────────────────┘
                                        │
                                        │
                    ┌───────────────────┼───────────────────┐
                    │                   │                   │
                    ▼                   ▼                   ▼
    ┌─────────────────────┐  ┌─────────────────────┐  ┌─────────────────────┐
    │   LANDVEHICLE       │  │   AIRVEHICLE        │  │   WATERVEHICLE      │
    │   (Abstract)        │  │   (Abstract)        │  │   (Abstract)        │
    ├─────────────────────┤  ├─────────────────────┤  ├─────────────────────┤
    │ - int numWheels     │  │ - double maxAltitude│  │ - boolean hasSail   │
    ├─────────────────────┤  ├─────────────────────┤  ├─────────────────────┤
    │ + LandVehicle(...)  │  │ + AirVehicle(...)   │  │ + WaterVehicle(...) │
    │ + getNumWheels()    │  │ + getMaxAltitude()  │  │ + hasSail()         │
    │ + estimateJourneyTime│  │ + estimateJourneyTime│  │ + estimateJourneyTime│
    └─────────────────────┘  └─────────────────────┘  └─────────────────────┘
                    │                   │                   │
                    │                   │                   │
        ┌───────────┼───────────┐       │                   │
        │           │           │       │                   │
        ▼           ▼           ▼       ▼                   ▼
┌─────────────┐ ┌─────────────┐ ┌─────────────┐ ┌─────────────┐ ┌─────────────┐
│     CAR     │ │    TRUCK    │ │     BUS     │ │  AIRPLANE   │ │ CARGO SHIP  │
├─────────────┤ ├─────────────┤ ├─────────────┤ ├─────────────┤ ├─────────────┤
│ - fuelLevel │ │ - fuelLevel │ │ - fuelLevel │ │ - fuelLevel │ │ - fuelLevel │
│ - passenger │ │ - cargoCap  │ │ - passenger │ │ - passenger │ │ - cargoCap  │
│   Capacity  │ │ - current   │ │   Capacity  │ │   Capacity  │ │ - current   │
│ - current   │ │   Cargo     │ │ - current   │ │ - current   │ │   Cargo     │
│   Passengers│ │ - maintenance│ │   Passengers│ │   Passengers│ │ - maintenance│
│ - maintenance│ │   Needed    │ │ - cargoCap  │ │ - cargoCap  │ │   Needed    │
│   Needed    │ │             │ │ - current   │ │ - current   │ │             │
│             │ │             │ │   Cargo     │ │   Cargo     │ │             │
│             │ │             │ │ - maintenance│ │ - maintenance│ │             │
│             │ │             │ │   Needed    │ │   Needed    │ │             │
└─────────────┘ └─────────────┘ └─────────────┘ └─────────────┘ └─────────────┘

┌─────────────────────────────────────────────────────────────────┐
│                        INTERFACES                               │
├─────────────────────────────────────────────────────────────────┤
│ FuelConsumable          CargoCarrier        PassengerCarrier    │
│ + refuel(amount)        + loadCargo(weight) + boardPassengers() │
│ + getFuelLevel()        + unloadCargo()     + disembarkPassengers│
│ + consumeFuel(distance) + getCargoCapacity() + getPassengerCap()│
│                         + getCurrentCargo()  + getCurrentPass()  │
├─────────────────────────────────────────────────────────────────┤
│                        Maintainable                             │
│ + scheduleMaintenance()                                         │
│ + needsMaintenance() : boolean                                  │
│ + performMaintenance()                                          │
└─────────────────────────────────────────────────────────────────┘

┌─────────────────────────────────────────────────────────────────┐
│                      FLEET MANAGER                             │
├─────────────────────────────────────────────────────────────────┤
│ - List<Vehicle> fleet                                           │
│ + {static} String DEFAULT_CSV                                  │
├─────────────────────────────────────────────────────────────────┤
│ + generateReport() : String                                     │
│ + addVehicle(Vehicle v) : void                                  │
│ + removeVehicle(String id) : void                               │
│ + startAllJourneys(double distance) : void                     │
│ + searchByType(Class<?> type) : List<Vehicle>                  │
│ + getVehiclesNeedingMaintenance() : List<Vehicle>              │
│ + getFleet() : List<Vehicle>                                    │
│ + saveToFile(String filename) : void                           │
│ + saveToFile() : void                                           │
│ + sortFleetByEfficiency() : void                               │
│ + loadFromFile(String filename) : int                          │
│ + loadFromFile() : int                                          │
│ + getTotalFuelConsumption(double distance) : double            │
│ - findById(String id) : Vehicle                                │
│ - {static} getTruck(String[] p) : Truck                        │
└─────────────────────────────────────────────────────────────────┘

┌─────────────────────────────────────────────────────────────────┐
│                          MAIN                                   │
├─────────────────────────────────────────────────────────────────┤
│ - {static} Scanner input                                        │
│ - {static} FleetManager fleetManager                            │
├─────────────────────────────────────────────────────────────────┤
│ + {static} main(String[] args) : void                          │
│ + {static} runDemo() : void                                     │
│ + {static} showMenu() : void                                    │
│ + {static} addVehicle() : void                                  │
│ + {static} removeVehicle() : void                               │
│ + {static} startJourneys() : void                               │
│ + {static} refuelAll() : void                                   │
│ + {static} performMaintenance() : void                          │
│ + {static} generateReport() : void                              │
│ + {static} saveFleet() : void                                   │
│ + {static} loadFleet() : void                                   │
│ + {static} listMaintenance() : void                             │
│ + {static} searchByType() : void                                │
└─────────────────────────────────────────────────────────────────┘

INTERFACE IMPLEMENTATIONS:
=========================

Car implements: FuelConsumable, PassengerCarrier, Maintainable
Truck implements: FuelConsumable, CargoCarrier, Maintainable
Bus implements: FuelConsumable, PassengerCarrier, CargoCarrier, Maintainable
Airplane implements: FuelConsumable, PassengerCarrier, CargoCarrier, Maintainable
CargoShip implements: CargoCarrier, Maintainable, FuelConsumable

RELATIONSHIPS:
==============

Inheritance:
- Vehicle ← LandVehicle ← Car, Truck, Bus
- Vehicle ← AirVehicle ← Airplane
- Vehicle ← WaterVehicle ← CargoShip

Composition:
- FleetManager ◇── Vehicle (manages)
- Main ──> FleetManager (uses)

Exception Handling:
- Vehicle, FuelConsumable, CargoCarrier, PassengerCarrier → Custom Exceptions


